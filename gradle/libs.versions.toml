[versions]
kermitVersion = "2.0.4"
materialIconsExtendedVersion = "1.5.0"
minSdkVersion = "26"
compileSdkVersion = "34"
javaVersion = "17"
gradlePluginVersion = "8.5.0"
ktorVersion = "3.0.1"
resources = "1.5.0"
resourcesVersion = "1.5.0"
roomVersion = "2.7.0-alpha12"
truthVersion = "1.1.5"
kotlinVersion = "2.1.0"
androidxCoreKtxVersion = "1.13.1"
composeBomVersion = "2024.10.00"
composeActivityVersion = "1.9.3"
composeNavVersion = "2.8.3"
coilVersion = "3.0.4"
androidxUnitVersion = "1.2.1"
androidxEspressoVersion = "3.6.1"
testJunitJupiterVersion = "5.10.0"
androidxLifecycleVersion = "2.8.2"
paparazziVersion = "1.3.1"
buildkonfigVersion = "0.15.2"
koinVersion = "4.0.1"
composeVersion = "1.7.3"
kspVersion = "2.1.0-1.0.29"
sqlite = "2.5.0-beta01"
kotlinxSerializationVersion = "1.8.0"

[libraries]
viewmodel-savestate-android = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycleVersion" }
androidx-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtxVersion" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermitVersion" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "materialIconsExtendedVersion" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "roomVersion" }
room-runtime-android = { group = "androidx.room", name = "room-runtime-android", version.ref = "roomVersion" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "roomVersion" }

androidx-lifecycle-runtime = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime", version.ref = "androidxLifecycleVersion" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidxLifecycleVersion" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycleVersion" }
network-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorVersion" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktorVersion" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxUnitVersion" }
androidx-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspressoVersion" }
androidx-compose-test = { module = "androidx.compose.ui:ui-test-junit4" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "testJunitJupiterVersion" }
jupiter = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "testJunitJupiterVersion" }
jupiter-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "testJunitJupiterVersion" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "testJunitJupiterVersion" }
truth = { module = "com.google.truth:truth", version.ref = "truthVersion" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version = "1.8.0" }
test-okhttp-mockserver = { module = "com.squareup.okhttp3:mockwebserver", version = "4.10.0" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinVersion" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinVersion" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinVersion" }
koin-composeVM = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinVersion" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilVersion" }
coil = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coilVersion" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
[bundles]
androidx = ["androidx-ktx", "androidx-lifecycle-runtime"]
unit-testing = ["jupiter", "jupiter-params", "truth", "jupiter-vintage", "test-coroutines", "test-okhttp-mockserver"]

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePluginVersion" }
android-library = { id = "com.android.library", version.ref = "gradlePluginVersion" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinVersion" }
kotlin-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinVersion" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinVersion" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazziVersion" }
parcelable = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlinVersion" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfigVersion" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "composeVersion" }
ksp = { id = "com.google.devtools.ksp", version.ref = "kspVersion" }
room = { id = "androidx.room", version.ref = "roomVersion" }
