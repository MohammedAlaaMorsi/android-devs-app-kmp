[versions]
kermitVersion = "2.0.4"
minSdkVersion = "26"
compileSdkVersion = "34"
javaVersion = "17"
gradlePluginVersion = "8.5.0"
ktorVersion = "3.0.1"
roomVersion = "2.6.1"
truthVersion = "1.1.5"
kotlinVersion = "2.0.20"
androidxCoreKtxVersion = "1.13.1"
composeBomVersion = "2024.10.00"
composeActivityVersion = "1.9.3"
composeNavVersion = "2.8.3"
coilVersion = "2.6.0"
androidxUnitVersion = "1.2.1"
androidxEspressoVersion = "3.6.1"
testJunitJupiterVersion = "5.10.0"
androidxLifecycleVersion = "2.8.2"
paparazziVersion = "1.3.1"
buildkonfigVersion = "0.15.2"
koinVersion = "4.0.1"
composeVersion = "1.7.3"
composeViewmodelVersion = "2.8.4"
kotlinxSerializationVersion = "1.8.0"
[libraries]
androidx-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtxVersion" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycleVersion" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBomVersion" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "composeActivityVersion" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-tooling" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavVersion" }
compose-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycleVersion" }

coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilVersion" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermitVersion" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }

androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidxLifecycleVersion" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycleVersion" }
network-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorVersion" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktorVersion" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxUnitVersion" }
androidx-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxEspressoVersion" }
androidx-compose-test = { module = "androidx.compose.ui:ui-test-junit4" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "testJunitJupiterVersion" }
jupiter = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "testJunitJupiterVersion" }
jupiter-vintage = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "testJunitJupiterVersion" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "testJunitJupiterVersion" }
truth = { module = "com.google.truth:truth", version.ref = "truthVersion" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version = "1.8.0" }
test-okhttp-mockserver = { module = "com.squareup.okhttp3:mockwebserver", version = "4.10.0" }
koin-core = { module= "io.insert-koin:koin-core" , version.ref = "koinVersion"}
koin-android = {  module=  "io.insert-koin:koin-android" , version.ref = "koinVersion"}
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinVersion" }
koin-composeVM = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinVersion" }

[bundles]
androidx = ["androidx-ktx", "androidx-lifecycle-runtime"]
compose = ["compose-activity", "compose-ui", "compose-graphics", "compose-preview", "compose-material3", "compose-navigation", "compose-lifecycle-runtime", "compose-material-icons", "network-serialization"]
compose-debug = ["compose-ui-tooling", "compose-ui-test-manifest"]
room = ["room-ktx", "room-runtime"]
ui-testing = ["androidx-junit", "androidx-espresso", "androidx-compose-test"]
unit-testing = ["jupiter", "jupiter-params", "truth", "jupiter-vintage", "test-coroutines", "test-okhttp-mockserver"]

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePluginVersion" }
android-library = { id = "com.android.library", version.ref = "gradlePluginVersion" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlinVersion" }
kotlin-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinVersion" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinVersion" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazziVersion" }
parcelable = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlinVersion" }
buildkonfig = { id= "com.codingfeline.buildkonfig", version.ref ="buildkonfigVersion" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "composeVersion" }
